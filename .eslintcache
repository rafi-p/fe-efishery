[{"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\index.js":"1","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\reportWebVitals.js":"2","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\App.js":"3","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\index.js":"4","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\router\\index.jsx":"5","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\index.js":"6","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\screen.js":"7","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\customFetch.js":"8","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\history.js":"9","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\screens\\index.js":"10","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\screens\\Dashboard\\index.jsx":"11","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\index.js":"12","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\Images.js":"13","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\Endpoints.js":"14","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\axios.js":"15","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\index.js":"16","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\Navbar\\index.jsx":"17","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\CustomFilter\\index.jsx":"18","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\CustomBtn\\index.jsx":"19","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\productList\\reducers.js":"20","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\productList\\actionTypes.js":"21","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\productList\\actions.js":"22","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\services\\productList.js":"23","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\convert.js":"24","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\screens\\AddProduct\\index.jsx":"25","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\CustomInput\\index.jsx":"26"},{"size":501,"mtime":1637294568156,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":660,"mtime":1637412568136,"results":"30","hashOfConfig":"28"},{"size":593,"mtime":1637324116720,"results":"31","hashOfConfig":"28"},{"size":809,"mtime":1637394886434,"results":"32","hashOfConfig":"28"},{"size":221,"mtime":1637325499699,"results":"33","hashOfConfig":"28"},{"size":637,"mtime":1630482255755,"results":"34","hashOfConfig":"28"},{"size":699,"mtime":1637324893837,"results":"35","hashOfConfig":"28"},{"size":88,"mtime":1637282941824,"results":"36","hashOfConfig":"28"},{"size":106,"mtime":1637394550638,"results":"37","hashOfConfig":"28"},{"size":8164,"mtime":1637419179866,"results":"38","hashOfConfig":"28"},{"size":147,"mtime":1637319522848,"results":"39","hashOfConfig":"28"},{"size":301,"mtime":1637417658500,"results":"40","hashOfConfig":"28"},{"size":248,"mtime":1637290307550,"results":"41","hashOfConfig":"28"},{"size":183,"mtime":1637287783758,"results":"42","hashOfConfig":"28"},{"size":214,"mtime":1637395261558,"results":"43","hashOfConfig":"28"},{"size":896,"mtime":1637402887464,"results":"44","hashOfConfig":"28"},{"size":3565,"mtime":1637397621754,"results":"45","hashOfConfig":"28"},{"size":498,"mtime":1637335841516,"results":"46","hashOfConfig":"28"},{"size":897,"mtime":1637377879977,"results":"47","hashOfConfig":"28"},{"size":153,"mtime":1637377885421,"results":"48","hashOfConfig":"28"},{"size":2190,"mtime":1637403348284,"results":"49","hashOfConfig":"28"},{"size":2698,"mtime":1637415017823,"results":"50","hashOfConfig":"28"},{"size":285,"mtime":1637325699781,"results":"51","hashOfConfig":"28"},{"size":4581,"mtime":1637414511190,"results":"52","hashOfConfig":"28"},{"size":1465,"mtime":1637399940352,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"6psp88",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\index.js",[],["120","121"],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\reportWebVitals.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\App.js",["122"],"import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter} from 'react-router-dom';\nimport Router from './router/index';\nimport {history, store } from './store/index';\nimport {Navbar} from './components/index'\nimport './App.scss'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className={'main-container'}>\n          <Navbar/>\n          <Router history={ history } />\n          <ToastContainer/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\index.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\router\\index.jsx",["123","124"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport {\r\n  Dashboard,\r\n  AddProduct\r\n} from '../screens';\r\n\r\nlet publicRoutes =  [\r\n    {\r\n      path: '/',\r\n      component: Dashboard,\r\n    },\r\n    {\r\n      path: '/add-product',\r\n      component: AddProduct,\r\n    },\r\n  ]\r\n\r\nconst Router = props => {\r\n\r\n  return (\r\n    // <ConnectedRouter history={ props.history }>\r\n    <Switch>\r\n      {\r\n        publicRoutes.map(route =>\r\n          <Route\r\n            key={ route.path }\r\n            exact path={ route.path }\r\n            component={ route.component }\r\n          />\r\n        )\r\n      }\r\n      {/* <Redirect to={ '/' }/> */}\r\n    </Switch>\r\n    // </ConnectedRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\index.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\screen.js",["125"],"const size = {\r\n  xs: '600px',\r\n  sm: '960px',\r\n  md: '1280px',\r\n  lg: '1920px'\r\n};\r\n\r\nconst sizesMax = {\r\n    xs: `screen and (max-width: ${size.xs})`,\r\n    sm: `screen and (max-width: ${size.sm})`,\r\n    md: `screen and (max-width: ${size.md})`,\r\n    lg: `screen and (max-width: ${size.lg})`,\r\n    tablet: 'screen and (min-device-width : 600px) and (max-device-width : 1024px)',\r\n};\r\n\r\nconst sizesMin = {\r\n  xs: `screen and (min-width: ${size.xs})`,\r\n  sm: `screen and (min-width: ${size.sm})`,\r\n  md: `screen and (min-width: ${size.md})`,\r\n  lg: `screen and (min-width: ${size.lg})`,\r\n};\r\n\r\nexport default { sizesMax, size, sizesMin };","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\customFetch.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\history.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\screens\\index.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\screens\\Dashboard\\index.jsx",["126","127","128"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport {\r\n  CustomBtn,\r\n  CustomFilter\r\n} from '../../components/index'\r\nimport {\r\n  Images\r\n} from '../../constant/index'\r\nimport { convert } from '../../helpers/index';\r\nimport * as prodListActions from '../../store/productList/actions';\r\n\r\nconst Dashboard = props => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false)\r\n  const [selectedFilter, setSelectedFilter] = useState('')\r\n  const [selectedSort, setSelectedSort] = useState('')\r\n  const [sortAsc, setSortAsc] = useState(true)\r\n  const [dataMain, setDataMain] = useState([])\r\n  const [dataSort, setDataSort] = useState([])\r\n  const [searchKeyword, setSearchKeyword] = useState('')\r\n  const [firstLoad, setFirstLoad] = useState(true)\r\n\r\n  const dataProdList = useSelector(state => state.prodList.data);\r\n  const getProdList = dispatch(prodListActions.getProdList);\r\n  const dataArea = useSelector(state => state.prodList.dataArea);\r\n  const getArea = dispatch(prodListActions.getArea);\r\n  const dataSize = useSelector(state => state.prodList.dataSize);\r\n  const getSize = dispatch(prodListActions.getSize);\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getProdList()\r\n    .then(res => {})\r\n    .catch(err => {})\r\n    .finally(() => {\r\n      setLoading(false)\r\n      setFirstLoad(false)\r\n    })\r\n    getArea()\r\n    getSize()\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(dataProdList) {\r\n      setDataMain(dataProdList)\r\n    }\r\n  },[\r\n    dataProdList\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if(dataSort) {\r\n      setDataMain(dataSort)\r\n      setLoading(false)\r\n    }\r\n  },[\r\n    dataSort\r\n  ])\r\n\r\n  const filterData = [\r\n    {\r\n      label: 'Comodity',\r\n      value: 'komoditas'\r\n    },\r\n    {\r\n      label: 'Size',\r\n      value: 'size'\r\n    },\r\n    {\r\n      label: 'Price',\r\n      value: 'price'\r\n    },\r\n    {\r\n      label: 'City',\r\n      value: 'area_kota'\r\n    },\r\n    {\r\n      label: 'Province',\r\n      value: 'area_provinsi'\r\n    },\r\n  ]\r\n\r\n  const sortData = [\r\n    {\r\n      label: 'Comodity',\r\n      value: 'komoditas'\r\n    },\r\n    {\r\n      label: 'Size',\r\n      value: 'size'\r\n    },\r\n    {\r\n      label: 'Price',\r\n      value: 'price'\r\n    },\r\n    {\r\n      label: 'City',\r\n      value: 'area_kota'\r\n    },\r\n    {\r\n      label: 'Province',\r\n      value: 'area_provinsi'\r\n    },\r\n    {\r\n      label: 'Data added',\r\n      value: 'tgl_parsed'\r\n    },\r\n  ]\r\n\r\n  const selectCategory = (type) => {\r\n    switch (type) {\r\n      case 'area_kota':\r\n        return dataArea.cities\r\n      case 'area_provinsi':\r\n        return dataArea.provinces\r\n      case 'size':\r\n        return dataSize\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const sortingData = (data, order) => {\r\n    let temp= [...data]\r\n    temp.sort((a, b) => {\r\n      if(order.category.includes('size') || order.category.includes('price')) {\r\n        if(order.asc) {\r\n          return (b[order.category] === null) - (a[order.category] === null) || (a[order.category] - b[order.category])\r\n        } else {\r\n          return (a[order.category] === null) - (b[order.category] === null) || (b[order.category] - a[order.category])\r\n        }\r\n\r\n      } else {\r\n        if(order.asc) {\r\n          return (b[order.category] === null) - (a[order.category] === null) || ('' + a[order.category]).localeCompare(b[order.category]);\r\n        } else {\r\n          return (a[order.category] === null) - (b[order.category] === null) || ('' + b[order.category]).localeCompare(a[order.category]);\r\n        }\r\n      }\r\n    })\r\n    setDataSort(temp)\r\n  }\r\n\r\n  const clickFilter = (keyword) => {\r\n    let filter = {\r\n      category: selectedFilter,\r\n      keyword: selectedFilter.includes('size') || selectedFilter.includes('price') ? Number(keyword) : keyword\r\n    }\r\n    setLoading(true)\r\n    getProdList(filter)\r\n    .then((res) => {\r\n      clickSort(res.payload.data)\r\n    })\r\n    .catch((err) => {\r\n    })\r\n    .finally(() => {\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  const clickSort = (main) => {\r\n    let data = main ? main : dataMain\r\n    let order = {\r\n      category: selectedSort,\r\n      asc:  sortAsc\r\n    }\r\n    if(selectedSort) {\r\n      sortingData(data, order)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSelectedFilter('')\r\n    setSelectedSort('')\r\n    setSortAsc(true)\r\n    setSearchKeyword('')\r\n    setLoading(true)\r\n    getProdList()\r\n    .then(res => {})\r\n    .catch(err => {})\r\n    .finally(() => {\r\n      setLoading(false)\r\n    })\r\n  }\r\n  const onChangeSearch = (e) => {\r\n      setSearchKeyword(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(selectedFilter.includes('price') && searchKeyword) {\r\n      let arr = searchKeyword.split('')\r\n      let first = ''\r\n      if(arr[0] === '0') {\r\n        first = arr.shift();\r\n      }\r\n      setSearchKeyword(arr.join(''))\r\n    }\r\n  },[\r\n    searchKeyword,\r\n    selectedFilter\r\n  ])\r\n\r\n  const FilterWrapper = () => {\r\n    return (\r\n      <div className=\"filter-wrapper\">\r\n        <div className=\"dropWrapper\">\r\n          <CustomFilter\r\n            data={sortData}\r\n            header={'Sort'}\r\n            sortAsc={sortAsc}\r\n            setSortAsc={setSortAsc}\r\n            clicked = {clickSort}\r\n            setSelected={setSelectedSort}\r\n            selectedValue={selectedSort}\r\n            disabled={!selectedSort}\r\n          />\r\n          <CustomFilter\r\n            data={filterData}\r\n            header={'Filter'}\r\n            isSearch={true}\r\n            setSelected={setSelectedFilter}\r\n            selectedValue={selectedFilter}\r\n            option={selectCategory(selectedFilter)}\r\n            clicked = {clickFilter}\r\n            searchKeyword={searchKeyword}\r\n            setSearchKeyword={setSearchKeyword}\r\n            onChangeSearch={onChangeSearch}\r\n            disabled={!searchKeyword || !selectedFilter ? true : false}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`btn-custom red ml-50`}\r\n          onClick={() => {\r\n            handleReset()\r\n          }}\r\n        >\r\n          Reset\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const dataTh = [\r\n    'No.',\r\n    'Comodity',\r\n    'Price',\r\n    'Size',\r\n    'City',\r\n    'Province',\r\n    'Date Added'\r\n  ]\r\n\r\n  const RenderTable = () => {\r\n    return (\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          <thead>\r\n            <tr className='row-head'>\r\n              {\r\n                dataTh.map((el, i) => {\r\n                  return (\r\n                    <th key={i}>{el}</th>\r\n                  )\r\n                })\r\n              }\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              !loading &&\r\n              dataMain &&\r\n              dataMain.map((el, i) => {\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{el.komoditas ? el.komoditas : '-'}</td>\r\n                    <td>{el.price ? convert.customNum(el.price) : '-'}</td>\r\n                    <td>{el.size ? convert.customNum(el.size, true) : '-'}</td>\r\n                    <td>{el.area_kota ? el.area_kota : '-'}</td>\r\n                    <td>{el.area_provinsi ? el.area_provinsi : '-'}</td>\r\n                    <td>{el.tgl_parsed ? convert.customDateFormat(el.tgl_parsed) : '-'}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='container-dashboard'>\r\n      <div className=\"wrapper-content\">\r\n        <div className=\"heading\">\r\n          eFishery Catalogue\r\n        </div>\r\n        <FilterWrapper/>\r\n        <RenderTable/>\r\n        {\r\n          (loading || firstLoad) &&\r\n          <div className='loading'>\r\n            <img src={Images.loading} alt=\"\" />\r\n            Loading\r\n          </div>\r\n        }\r\n        {\r\n          !loading && dataMain.length === 0 && !firstLoad &&\r\n          <div className='loading'>\r\n            <img src={Images.noData} className='noData' alt=\"\" />\r\n            No Data\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\index.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\Images.js",["129"],"/* eslint-disable no-undef */\r\nexport default {\r\n\tlogo: require('../assets/images/logo.png').default,\r\n\tloading: require('../assets/images/Spinner-1s-60px.svg').default,\r\n\tback: require('../assets/images/left_long_arrow.svg').default,\r\n\tnoData: require('../assets/images/headspace.png').default,\r\n};\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\Endpoints.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\constant\\axios.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\index.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\Navbar\\index.jsx",["130","131","132","133","134"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './Navbar.scss';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Images, Colors, FontStyles } from '../../constant/index';\r\nimport {\r\n} from '../index';\r\n\r\n\r\nconst NavbarComponent = props => {\r\n  const history = useHistory()\r\n  const { pathname } = useLocation();\r\n\r\n  const isActive = (path) => {\r\n    if(path === pathname) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={'container text'}\r\n    >\r\n      <img\r\n        className='logo'\r\n        src={Images.logo}\r\n        alt=\"\"\r\n        onClick={() => {history.push('/')}}\r\n      />\r\n      <div\r\n        className={`btn-add ${isActive('/add-product') ? 'active' : ''}`}\r\n        onClick={() => {history.push('/add-product')}}\r\n      >\r\n        Add Product\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarComponent;\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\CustomFilter\\index.jsx",["135","136","137","138","139","140","141","142","143"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Images, Colors, FontStyles } from '../../constant/index';\r\n// import {CustomBtn} from '../index'\r\n\r\nconst CustomFilter = props => {\r\n  const {\r\n    data,\r\n    header,\r\n    isSearch,\r\n    selectedValue,\r\n  } = props\r\n  const [searchLocal, setSearchLocal] = useState('')\r\n\r\n  const onChangeSelect = (e) => {\r\n    props.setSelected && props.setSelected(e.target.value)\r\n    props.setSearchKeyword && props.setSearchKeyword('')\r\n  }\r\n\r\n  const CustomInput = () => {\r\n    <div className=\"search\">\r\n      <input\r\n        onChange={props.onChangeSearch}\r\n        defaultValue={props.searchKeyword}\r\n        type=\"text\"\r\n        placeholder='Search...'\r\n        onKeyPress={(event) => {\r\n          if (!/[0-9]/.test(event.key) && selectedValue.includes('price') ) {\r\n            event.preventDefault();\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"dropdown-wrapper\">\r\n      <div className=\"text\">\r\n        {header} by:\r\n      </div>\r\n      <div className=\"buttonDrop\">\r\n        <select\r\n          // name=\"category\"\r\n          // id=\"category\"\r\n          onChange={onChangeSelect}\r\n          value={selectedValue}\r\n          className={`${isSearch ? 'bg-green' : ''}`}\r\n        >\r\n          <option value=\"\" disabled>Select Category...</option>\r\n          {\r\n            data.map((el, i) => {\r\n              return (\r\n                <option key={i} value={el.value}>{el.label}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        {\r\n          isSearch && props.option\r\n          ?\r\n          <select\r\n            // name=\"category\"\r\n            // id=\"category\"\r\n            onChange={props.onChangeSearch}\r\n            value={props.searchKeyword}\r\n            className={'right-option'}\r\n          >\r\n            <option value=\"\" disabled>Select Category...</option>\r\n            {\r\n              props.option.map((el, i) => {\r\n                return (\r\n                  <option key={i} value={el}>{el}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n          :\r\n          isSearch\r\n            ?\r\n            <div className=\"search\">\r\n              <input\r\n                autoFocus=\"autoFocus\"\r\n                onChange={props.onChangeSearch}\r\n                defaultValue={props.searchKeyword}\r\n                type=\"text\"\r\n                placeholder='Search...'\r\n                onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key) && selectedValue.includes('price') ) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            :\r\n            <div\r\n              className=\"btnSortFilter\"\r\n              onClick={() => {\r\n                props.setSortAsc(!props.sortAsc)\r\n              }}\r\n            >\r\n              {\r\n                !props.sortAsc\r\n                ? 'Desc'\r\n                : 'Asc'\r\n              }\r\n            </div>\r\n        }\r\n        <div\r\n          className={`btn-custom ${\r\n            props.disabled && props.disabled\r\n            ? 'disabled'\r\n            : ''\r\n          }`}\r\n          onClick={() => {\r\n            if(isSearch) {\r\n              props.clicked(props.searchKeyword)\r\n            } else {\r\n              props.clicked()\r\n            }\r\n          }}\r\n        >\r\n          {header}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomFilter;\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\CustomBtn\\index.jsx",["144","145","146","147","148","149","150"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Images, Colors, FontStyles } from '../../constant/index';\r\n\r\nconst CustomBtn = props => {\r\n  const {text, isReset,className} = props\r\n\r\n  return (\r\n    <div\r\n      className={`btn-custom ${isReset ? 'red' : ''} ${className ? className : ''}`}\r\n      onCLick={() => {props.onClick()}}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomBtn;\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\productList\\reducers.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\productList\\actionTypes.js",["151"],"export default {\r\n  GET_PRODLIST_SUCCESS: 'GET_PRODLIST_SUCCESS',\r\n  GET_AREA_SUCCESS: 'GET_AREA_SUCCESS',\r\n  GET_SIZE_SUCCESS: 'GET_SIZE_SUCCESS',\r\n};\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\store\\productList\\actions.js",[],"D:\\CODING_TEST\\efishery\\fe-efishery\\src\\services\\productList.js",["152","153"],"import { Endpoints } from '../constant/index';\r\nimport { convert, customFetch } from '../helpers/index';\r\n\r\nexport const getProdList = async(params, data) => {\r\n  const setProdList = cats => {\r\n    let newArr = cats.map((cat, i) => {\r\n      return {\r\n        area_kota: cat.area_kota,\r\n        area_provinsi: cat.area_provinsi,\r\n        komoditas: cat.komoditas,\r\n        price: cat.price ? Number(cat.price.replace(/[.]+/g,\"\")) : cat.price,\r\n        size: cat.size ? Number(cat.size.replace(/[.]+/g,\"\")) : cat.size,\r\n        tgl_parsed: cat.tgl_parsed ,\r\n        timestamp: cat.timestamp,\r\n        uuid: cat.uuid,\r\n      };\r\n    });\r\n    return newArr;\r\n  };\r\n\r\n  try {\r\n\r\n    const uri = params\r\n    ?`?search={\"${params.category ? params.category : ''}\":\"${params.keyword ? params.keyword : ''}\"}`\r\n    : ''\r\n\r\n    const response = await customFetch(`${Endpoints.url}${Endpoints.param.list}${uri}`, 'GET', data, false);\r\n\r\n    if (response.data) {\r\n      response.data = setProdList(response.data);\r\n    } else {\r\n      response.data = {};\r\n    }\r\n    return response\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addProd = async(params, data) => {\r\n\r\n  try {\r\n\r\n    const response = await customFetch(`${Endpoints.url}${Endpoints.param.list}`, 'POST', data, false);\r\n\r\n    if (response.data) {\r\n      response.data = response.data;\r\n    } else {\r\n      response.data = {};\r\n    }\r\n    return response\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getArea= async(params, data) => {\r\n  const setArea = cats => {\r\n    let payload = {\r\n      cities: [],\r\n      provinces: []\r\n    }\r\n    cats.forEach((cat, i) => {\r\n      payload.cities.push(cat.city)\r\n      if(!payload.provinces.includes(cat.province)) {\r\n        payload.provinces.push(cat.province)\r\n      }\r\n    });\r\n    if(params && params.add) {\r\n      return cats\r\n    } else {\r\n      return payload;\r\n    }\r\n  };\r\n\r\n  try {\r\n\r\n    const response = await customFetch(`${Endpoints.url}${Endpoints.param.area}`, 'GET', data, false);\r\n\r\n    if (response.data) {\r\n      response.data = setArea(response.data);\r\n    } else {\r\n      response.data = {};\r\n    }\r\n    return response\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getSize= async(params, data) => {\r\n  const setSize= cats => {\r\n    let newArr = cats.map((cat, i) => {\r\n      return cat.size\r\n    });\r\n    return newArr\r\n  }\r\n\r\n  try {\r\n\r\n    const response = await customFetch(`${Endpoints.url}${Endpoints.param.size}`, 'GET', data, false);\r\n\r\n    if (response.data) {\r\n      response.data = setSize(response.data)\r\n    } else {\r\n      response.data = {};\r\n    }\r\n    return response\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\helpers\\convert.js",["154"],"export const customNum = (data, isNotCurrency) => {\r\n    if (data || data === 0) {\r\n        return (isNotCurrency ? '' : 'Rp ') + new Number(data).toLocaleString('id', 'ID');\r\n    }\r\n};\r\n\r\nexport const customDateFormat = (date) => {\r\n    return new Date(date).toLocaleDateString();\r\n};","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\screens\\AddProduct\\index.jsx",["155","156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport {\r\n  CustomInput\r\n} from '../../components/index'\r\nimport {\r\n  Images\r\n} from '../../constant/index'\r\nimport { v4 as uuid } from 'uuid';\r\nimport { convert } from '../../helpers/index';\r\nimport { toast } from 'react-toastify';\r\nimport * as prodListActions from '../../store/productList/actions';\r\n\r\nconst AddProduct = props => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false)\r\n  const [comodity, setComodity] = useState('')\r\n  const [province, setProvince] = useState('')\r\n  const [city, setCity] = useState('')\r\n  const [size, setSize] = useState('')\r\n  const [price, setPrice] = useState('')\r\n  const [dataProvince, setDataProvince] = useState([])\r\n  const [dataCity, setDataCity] = useState([])\r\n\r\n  const dataArea = useSelector(state => state.prodList.dataArea);\r\n  const getArea = dispatch(prodListActions.getArea);\r\n  const dataSize = useSelector(state => state.prodList.dataSize);\r\n  const getSize = dispatch(prodListActions.getSize);\r\n  const addProd = dispatch(prodListActions.addProd);\r\n\r\n  useEffect(() => {\r\n    getArea({add: true})\r\n    getSize()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let temp = []\r\n    if(Array.isArray(dataArea)) {\r\n      dataArea.forEach((el, i) => {\r\n        if(!temp.includes(el.province)) {\r\n          temp.push(el.province)\r\n        }\r\n      })\r\n    }\r\n    setDataProvince(temp)\r\n  }, [dataArea])\r\n\r\n  useEffect(() => {\r\n    let temp = []\r\n    if(province && Array.isArray(dataArea)) {\r\n      temp = dataArea.filter(el => el.province === province)\r\n      temp = temp.map((el,i) => el.city)\r\n    }\r\n    setDataCity(temp)\r\n  }, [province])\r\n\r\n  useEffect(() => {\r\n    if(price) {\r\n      let arr = price.split('')\r\n      let first = ''\r\n      if(arr[0] === '0') {\r\n        first = arr.shift();\r\n      }\r\n      setPrice(arr.join(''))\r\n    }\r\n  },[\r\n    price\r\n  ])\r\n\r\n  const disabled = () => {\r\n    if(\r\n      !comodity ||\r\n      !province ||\r\n      !city ||\r\n      !size ||\r\n      !price\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const submit = () => {\r\n    const currentDate = new Date();\r\n    const payload = [{\r\n      uuid: uuid(),\r\n      area_provinsi: province,\r\n      area_kota: city,\r\n      size,\r\n      price: price,\r\n      komoditas: comodity,\r\n      tgl_parsed: currentDate.toISOString(),\r\n      timestamp: currentDate.getTime()\r\n    }];\r\n    setLoading(true)\r\n    addProd({}, payload)\r\n    .then(res => {\r\n      toast.success(\"Success Adding Product!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n      });\r\n\r\n      props.history.push('/')\r\n    })\r\n    .catch(err => {\r\n    })\r\n    .finally(() => {setLoading(false)})\r\n  }\r\n\r\n  return (\r\n    <div className='container-dashboard'>\r\n      <div className=\"wrapper-content-addProd\">\r\n        <div className=\"heading\">\r\n          <div\r\n            className='container-img'\r\n            onClick={() => {props.history.push('/')}}\r\n          >\r\n            <img src={Images.back} alt=\"\" />\r\n          </div>\r\n          Add Product\r\n        </div>\r\n        <div className=\"wrapper-input\">\r\n          <CustomInput\r\n            label='Comodity'\r\n            onChange={(e) => (setComodity(e.target.value))}\r\n            value={comodity}\r\n          />\r\n          <CustomInput\r\n            isDropdown = {true}\r\n            label='Province'\r\n            onChange={(e) => (setProvince(e.target.value))}\r\n            value={province}\r\n            data={dataProvince}\r\n\r\n          />\r\n          <CustomInput\r\n            isDropdown = {true}\r\n            label='City'\r\n            onChange={(e) => (setCity(e.target.value))}\r\n            value={city}\r\n            data={dataCity}\r\n          />\r\n          <CustomInput\r\n            isDropdown = {true}\r\n            label='Size'\r\n            onChange={(e) => (setSize(e.target.value))}\r\n            value={size}\r\n            data={dataSize}\r\n          />\r\n          <CustomInput\r\n            label='Price'\r\n            onChange={(e) => (setPrice(e.target.value))}\r\n            value={price}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`btn-custom cust-width-btn ${\r\n            disabled() || loading\r\n            ? 'disabled'\r\n            : ''\r\n          }`}\r\n          onClick={() => { submit() }}\r\n        >\r\n          {'Submit'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default AddProduct;\r\n","D:\\CODING_TEST\\efishery\\fe-efishery\\src\\components\\CustomInput\\index.jsx",["159","160","161","162","163","164","165","166"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Images, Colors, FontStyles } from '../../constant/index';\r\n\r\nconst CustomInput = props => {\r\n  const {\r\n\r\n  } = props\r\n\r\n  return (\r\n    <div className=\"container-input\">\r\n      <div className=\"text-header\">\r\n        {props.label}\r\n      </div>\r\n      {\r\n        !props.isDropdown\r\n        ?\r\n        <input\r\n          autoFocus=\"autoFocus\"\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          type=\"text\"\r\n          placeholder={props.label}\r\n          onKeyPress={(event) => {\r\n            if (!/[0-9]/.test(event.key) && (props.label ? props.label : '').toLowerCase().includes('price') ) {\r\n              event.preventDefault();\r\n            }\r\n          }}\r\n        />\r\n        :\r\n        <select\r\n          // name=\"category\"\r\n          // id=\"category\"\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          className={``}\r\n        >\r\n          <option value=\"\" disabled>Select {props.label}...</option>\r\n          {\r\n            props.data &&\r\n            props.data.map((el, i) => {\r\n              return (\r\n                // <option key={i} value={el.value}>{el.label}</option>\r\n                <option key={i} value={el}>{el}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":8,"column":26,"nodeType":"173","messageId":"174","endLine":8,"endColumn":31},{"ruleId":"171","severity":1,"message":"175","line":2,"column":25,"nodeType":"173","messageId":"174","endLine":2,"endColumn":33},{"ruleId":"171","severity":1,"message":"176","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":23,"column":1,"nodeType":"179","endLine":23,"endColumn":45},{"ruleId":"171","severity":1,"message":"180","line":5,"column":3,"nodeType":"173","messageId":"174","endLine":5,"endColumn":12},{"ruleId":"181","severity":1,"message":"182","line":43,"column":5,"nodeType":"183","endLine":43,"endColumn":7,"suggestions":"184"},{"ruleId":"171","severity":1,"message":"185","line":196,"column":9,"nodeType":"173","messageId":"174","endLine":196,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":2,"column":1,"nodeType":"179","endLine":7,"endColumn":3},{"ruleId":"171","severity":1,"message":"186","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"187","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"188","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":44},{"ruleId":"171","severity":1,"message":"189","line":4,"column":18,"nodeType":"173","messageId":"174","endLine":4,"endColumn":24},{"ruleId":"171","severity":1,"message":"190","line":4,"column":26,"nodeType":"173","messageId":"174","endLine":4,"endColumn":36},{"ruleId":"171","severity":1,"message":"187","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"188","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":44},{"ruleId":"171","severity":1,"message":"191","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"192","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":16},{"ruleId":"171","severity":1,"message":"189","line":4,"column":18,"nodeType":"173","messageId":"174","endLine":4,"endColumn":24},{"ruleId":"171","severity":1,"message":"190","line":4,"column":26,"nodeType":"173","messageId":"174","endLine":4,"endColumn":36},{"ruleId":"171","severity":1,"message":"193","line":14,"column":10,"nodeType":"173","messageId":"174","endLine":14,"endColumn":21},{"ruleId":"171","severity":1,"message":"194","line":14,"column":23,"nodeType":"173","messageId":"174","endLine":14,"endColumn":37},{"ruleId":"171","severity":1,"message":"195","line":21,"column":9,"nodeType":"173","messageId":"174","endLine":21,"endColumn":20},{"ruleId":"171","severity":1,"message":"186","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"187","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"188","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":44},{"ruleId":"171","severity":1,"message":"191","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"192","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":16},{"ruleId":"171","severity":1,"message":"189","line":4,"column":18,"nodeType":"173","messageId":"174","endLine":4,"endColumn":24},{"ruleId":"171","severity":1,"message":"190","line":4,"column":26,"nodeType":"173","messageId":"174","endLine":4,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":1,"column":1,"nodeType":"179","endLine":5,"endColumn":3},{"ruleId":"171","severity":1,"message":"196","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":47,"column":23,"nodeType":"199","messageId":"200","endLine":47,"endColumn":36},{"ruleId":"201","severity":1,"message":"202","line":3,"column":47,"nodeType":"203","messageId":"204","endLine":3,"endColumn":63},{"ruleId":"171","severity":1,"message":"196","line":11,"column":10,"nodeType":"173","messageId":"174","endLine":11,"endColumn":17},{"ruleId":"181","severity":1,"message":"205","line":35,"column":6,"nodeType":"183","endLine":35,"endColumn":8,"suggestions":"206"},{"ruleId":"181","severity":1,"message":"207","line":56,"column":6,"nodeType":"183","endLine":56,"endColumn":16,"suggestions":"208"},{"ruleId":"171","severity":1,"message":"185","line":63,"column":9,"nodeType":"173","messageId":"174","endLine":63,"endColumn":14},{"ruleId":"171","severity":1,"message":"186","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"187","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"188","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":44},{"ruleId":"171","severity":1,"message":"191","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"192","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":16},{"ruleId":"171","severity":1,"message":"189","line":4,"column":18,"nodeType":"173","messageId":"174","endLine":4,"endColumn":24},{"ruleId":"171","severity":1,"message":"190","line":4,"column":26,"nodeType":"173","messageId":"174","endLine":4,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":7,"column":9,"nodeType":"211","messageId":"212","endLine":9,"endColumn":4},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'ConnectedRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CustomBtn' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getArea', 'getProdList', and 'getSize'. Either include them or remove the dependency array.","ArrayExpression",["215"],"'first' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Colors' is defined but never used.","'FontStyles' is defined but never used.","'useHistory' is defined but never used.","'Images' is defined but never used.","'searchLocal' is assigned a value but never used.","'setSearchLocal' is assigned a value but never used.","'CustomInput' is assigned a value but never used.","'convert' is defined but never used.","no-self-assign","'response.data' is assigned to itself.","MemberExpression","selfAssignment","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","React Hook useEffect has missing dependencies: 'getArea' and 'getSize'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'dataArea'. Either include it or remove the dependency array.",["217"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [getArea, getProdList, getSize]",{"range":"224","text":"225"},"Update the dependencies array to be: [getArea, getSize]",{"range":"226","text":"227"},"Update the dependencies array to be: [dataArea, province]",{"range":"228","text":"229"},[1459,1461],"[getArea, getProdList, getSize]",[1243,1245],"[getArea, getSize]",[1740,1750],"[dataArea, province]"]